add.test:
	initial begin
	    // add.test
      // mov32 r0, 0
      mem [0] = {8'hb4, 8'h00, 16'h0000, 32'h00000000};
      // mov32 r6, 2
      mem [1] = {8'hb4, 8'h06, 16'h0000, 32'h00000002};
      // add32 r0, 1
      mem [2] = {8'h04, 8'h00, 16'h0000, 32'h00000001};
      // add32 r0, r6
      mem [3] = {8'h0c, 8'h60, 16'h0000, 32'h00000000};
      // exit
      mem [4] = {8'h95, 8'h00, 16'h0000, 32'h00000000};  
    end
    -- result 
    0x000000003
   
div64-reg.test:
  initial begin
    // div64-reg.test
    // mov64 r0, 0xc
    mem [0] = {8'hb7, 8'h00, 16'h0000, 32'h0000000c};
    // lsh64 r0, 32
    mem [1] = {8'h67, 8'h00, 16'h0000, 32'h00000020};
    // mov64 r6, 4
    mem [2] = {8'hb7, 8'h06, 16'h0000, 32'h00000004};
    // div64 r0, r6 (12*(2^32)/4)
    mem [3] = {8'h3f, 8'h60, 16'h0000, 32'h00000000};
    // exit
    mem [4] = {8'h95, 8'h00, 16'h0000, 32'h00000000}; 
  end
  -- result
  0x300000000
  
jeq-imm.test
  initial begin
    // jeq-imm.test
    // mov32 r6, 0
    mem [0] = {8'hb4, 8'h06, 16'h0000, 32'h00000000};
    // mov32 r7, 0xa
    mem [1] = {8'hb4, 8'h07, 16'h0000, 32'h0000000a};
    // jeq r7, 0xb, +4 # Not taken
    mem [2] = {8'h15, 8'h07, 16'h0004, 32'h0000000b};
    // mov32 r6, 1
    mem [3] = {8'hb4, 8'h08, 16'h0000, 32'h00000001};
    // mov32 r7, 0xb
    mem [4] = {8'hb4, 8'h07, 16'h0000, 32'h0000000b};
    // jeq r7, 0xb, +1 # Taken
    mem [5] = {8'h15, 8'h06, 16'h0001, 32'h0000000b};
    // mov32 r6, 2 # Skipped
    mem [6] = {8'hb4, 8'h00, 16'h0000, 32'h00000002};
    // exit
    mem [7] = {8'h95, 8'h00, 16'h0000, 32'h00000000}; 
  end
  -- result
  0x1
